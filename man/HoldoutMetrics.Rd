% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HoldoutMetrics.R
\docType{class}
\name{HoldoutMetrics}
\alias{HoldoutMetrics}
\title{HoldoutMetrics}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
HoldoutMetrics
}
\description{
Create HoldoutMetrics object
}
\section{Methods}{

\describe{
  \item{\code{$new(Threshold, Sigma, Budget)}}{Creates a new \code{Thresholdout} object.}
  \item{\code{$query(train_val, holdout_val)}}{Sends a query to the holdout dataset.}
}
}

\section{Actives}{

\describe{
  \item{\code{$Threshold}}{gets the Threshold value.}
  \item{\code{$Sigma}}{gets the Sigma value.}
  \item{\code{$Budget}}{gets the remaining Budget value.}
  \item{\code{$Record}}{gets the Record of previous queries.}
}
}

\examples{
library(rThresholdout)
library(ModelMetrics)

# split data
data(testDF)
train <- testDF[1:50,]
holdout <- testDF[51:100,]

# identify targets
train_target <- train$y
holdout_target <- holdout$y

# build a model
model <- glm(y ~ ., data = train, family="binomial")

# generate predictions
train_preds <- predict(model, train)
holdout_preds <- predict(model, holdout)

# ModelMetrics provides a consistent Rcpp implementation for several measures of fit
train_metrics <- auc(actual = train_target, predicted = train_preds)
holdout_metrics <- auc(actual = holdout_target, predicted = holdout_preds)

# Thresholdout returns metrics derived from train and holdout data sets.
Thresholdout_Obj <- Thresholdout$new(Threshold = 0.04, Sigma = 0.01, Budget = 1000)
Thresholdout_Obj$query(train_val = train_metrics, holdout_val = holdout_metrics)

}
\keyword{datasets}
